}
swing_tbl <- swing_tbl %>%
mutate(damage = execute(rage),
dpr = damage/rage)
#
# dpr_tbl <- tibble::tribble(
#     ~`length`,      ~total_dpr,
# end,   totaldprval
# )
return(swing_tbl)
}
total_dpr <- function(swing_tbl = NULL){
totaldprval <- swing_tbl %>%
select(dpr) %>%
summarise(sum(dpr))
return(totaldprval)
}
## Refactor this section for the love of god
epl <- seq(5, 20, 5)
sword_20 <- execute_dpr(start = 0, end = 20, speed = 2.4, avg_dmg = 143, weapon_type = "sword", oh = "yes") %>%
total_dpr() %>%
mutate(epl = 20,
weapon_type = "onehander") %>%
rename(totaldpr = `sum(dpr)`)
sword_15 <- execute_dpr(start = 0, end = 15, speed = 2.4, avg_dmg = 143, weapon_type = "sword", oh = "yes") %>%
total_dpr() %>%
mutate(epl = 15,
weapon_type = "onehander") %>%
rename(totaldpr = `sum(dpr)`)
sword_10 <- execute_dpr(start = 0, end = 10, speed = 2.4, avg_dmg = 143, weapon_type = "sword", oh = "yes") %>%
total_dpr() %>%
mutate(epl = 10,
weapon_type = "onehander")%>%
rename(totaldpr = `sum(dpr)`)
sword_05 <- execute_dpr(start = 0, end = 05, speed = 2.4, avg_dmg = 143, weapon_type = "sword", oh = "yes") %>%
total_dpr() %>%
mutate(epl = 05,
weapon_type = "onehander")%>%
rename(totaldpr = `sum(dpr)`)
dagger_20 <- execute_dpr(start = 1.5, end = 20, speed = 1.5, avg_dmg = 105, weapon_type = "dagger", oh = "yes") %>%
total_dpr() %>%
mutate(epl = 20,
weapon_type = "dagger") %>%
rename(totaldpr = `sum(dpr)`)
dagger_15 <- execute_dpr(start = 1.5, end = 15, speed = 1.5, avg_dmg = 105, weapon_type = "dagger", oh = "yes") %>%
total_dpr() %>%
mutate(epl = 15,
weapon_type = "dagger") %>%
rename(totaldpr = `sum(dpr)`)
dagger_10 <- execute_dpr(start = 1.5, end = 10, speed = 1.5, avg_dmg = 105, weapon_type = "dagger", oh = "yes") %>%
total_dpr() %>%
mutate(epl = 10,
weapon_type = "dagger") %>%
rename(totaldpr = `sum(dpr)`)
dagger_05 <- execute_dpr(start = 1.5, end = 05, speed = 1.5, avg_dmg = 105, weapon_type = "dagger", oh = "yes") %>%
total_dpr() %>%
mutate(epl = 05,
weapon_type = "dagger") %>%
rename(totaldpr = `sum(dpr)`)
twohander_20 <- execute_dpr(start = 0, end = 20, speed = 3.3, avg_dmg = 258, weapon_type = "twohander", oh = "no") %>%
total_dpr() %>%
mutate(epl = 20,
weapon_type = "twohander")%>%
rename(totaldpr = `sum(dpr)`)
twohander_15 <- execute_dpr(start = 0, end = 15, speed = 3.3, avg_dmg = 258, weapon_type = "twohander", oh = "no") %>%
total_dpr() %>%
mutate(epl = 15,
weapon_type = "twohander")%>%
rename(totaldpr = `sum(dpr)`)
twohander_10 <- execute_dpr(start = 0, end = 10, speed = 3.3, avg_dmg = 258, weapon_type = "twohander", oh = "no") %>%
total_dpr() %>%
mutate(epl = 10,
weapon_type = "twohander")%>%
rename(totaldpr = `sum(dpr)`)
twohander_05 <- execute_dpr(start = 0, end = 05, speed = 3.3, avg_dmg = 258, weapon_type = "twohander", oh = "no") %>%
total_dpr() %>%
mutate(epl = 05,
weapon_type = "twohander")%>%
rename(totaldpr = `sum(dpr)`)
overall_totaldpr <- bind_rows(twohander_20,twohander_15,twohander_10,twohander_05,
sword_20, sword_15, sword_10, sword_05,
dagger_20, dagger_15, dagger_10, dagger_05) %>%
mutate(weapon_type = as.factor(weapon_type))
ggplot(overall_totaldpr, aes(x = epl, y = totaldpr, colour = weapon_type)) +
geom_point() +
geom_line() +
scale_colour_manual(values = cbp2,
name = "Weapon Speed and Type",
labels = c("1.5 (One Handed)", "2.4 (One Handed)", "3.3 (Two Handed)")) +
scale_y_continuous(breaks = seq(100, 700, by = 100)) +
labs(y = "Total Damage per Rage",
x = "Execute phase length (s)",
title = "Short Execute phase lengths make switching less effective.",
subtitle = "Calculations account for 1.5 second offset caused by the weapon switch.")
hs_cost <- function(dmg_auto, imp_hs = 3){
cost = (15 + rage_gen(dmg_auto)-imp_hs)
return(cost)
}
hs_dmg <- function(crit = 0.3, dodge = 0.06, dmg_auto, ap, wpn_spd){
apdmg = ad_dmg(ap, wpn_spd)
multiplier = (1+crit-dodge) * (dmg_auto + apdmg) # dodge is hardcoded as 0.06 due to 305 weapon skill
glance = 0.4 * (dmg_auto - (0.85 * dmg_auto)) # 0.4 is P(glance) and 0.85 is hardcoded 305 wep skill
damage = multiplier + glance + 138 # assuming highest rank hs
return(damage)
}
cleave_cost <- function(dmg_auto){
cost = 20 + rage_gen(dmg_auto)
return(cost)
}
cleave_dmg <- function(crit = 0.3, dodge = 0.06, dmg_auto, ap, wpn_spd = 3.4, imp_cleave = 0, n = 2) {
cleave_mult = 1 + (imp_cleave * 0.4)
apdmg = ad_dmg(ap,wpn_spd)
swingdmg = dmg_auto + apdmg
bonus = 50 * cleave_mult
multiplier = (1+crit-dodge) * (swingdmg + bonus)
glance = 0.4 * (dmg_auto - (0.85 * dmg_auto)) # 0.4 is P(glance) and 0.85 is hardcoded 305 wep skill
damage = n * (multiplier + glance)
return(damage)
}
dagger_hstbl <- tibble(
swing = rnorm(mean = 105, sd = 4, n = 11000),
ap = rep(ap_vals, length.out = 11000),
damage = hs_dmg(dmg_auto = swing, ap = ap, wpn_spd = 1.5),
cost = hs_cost(swing),
dpr = damage / cost,
weapon = "dagger"
)
onehand_hstbl <- tibble(
swing = rnorm(mean = 143, sd = 4, n = 11000),
ap = rep(ap_vals, length.out = 11000),
damage = hs_dmg(dmg_auto = swing, ap = ap, wpn_spd = 2.4),
cost = hs_cost(swing),
dpr = damage / cost,
weapon = "onehand"
)
twohand_hstbl <- tibble(
swing = rnorm(mean = 258, sd = 4, n = 11000),
ap = rep(ap_vals, length.out = 11000),
damage = hs_dmg(dmg_auto = swing, ap = ap, wpn_spd = 3.4),
cost = hs_cost(swing),
dpr = damage / cost,
weapon = "twohand"
)
hstbl <- bind_rows(dagger_hstbl, onehand_hstbl, twohand_hstbl) %>%
mutate(ability = "Heroic Strike")
dagger_clvtbl <- tibble(
swing = rnorm(mean = 105, sd = 4, n = 11000),
ap = rep(ap_vals, length.out = 11000),
damage = (cleave_dmg(dmg_auto = swing, ap = ap, wpn_spd = 1.5)),
cost = cleave_cost(swing),
dpr = damage / cost,
weapon = "dagger"
)
onehand_clvtbl <- tibble(
swing = rnorm(mean = 143, sd = 4, n = 11000),
ap = rep(ap_vals, length.out = 11000),
damage = (cleave_dmg(dmg_auto = swing, ap = ap, wpn_spd = 2.4)),
cost = cleave_cost(swing),
dpr = damage / cost,
weapon = "onehand"
)
twohand_clvtbl <- tibble(
swing = rnorm(mean = 258, sd = 4, n = 11000),
ap = rep(ap_vals, length.out = 11000),
damage = (cleave_dmg(dmg_auto = swing, ap = ap, wpn_spd = 3.4)),
cost = cleave_cost(swing),
dpr = damage / cost,
weapon = "twohand"
)
clvtbl <- bind_rows(dagger_clvtbl, onehand_clvtbl, twohand_clvtbl) %>%
mutate(ability = "Cleave")
twohand_slamtbl <- tibble(
swing = rnorm(mean = 258, sd = 4, n = 11000),
ap = rep(ap_vals, length.out = 11000),
damage = slam(wpn_swing_dmg = swing, ap = ap, wpn_spd = 3.4),
cost = 15,
dpr = damage / cost,
weapon = "twohand",
ability = "Slam"
)
onehand_slamtbl <- tibble(
swing = rnorm(mean = 243, sd = 4, n = 11000),
ap = rep(ap_vals, length.out = 11000),
damage = slam(wpn_swing_dmg = swing, ap = ap, wpn_spd = 2.3),
cost = 15,
dpr = damage / cost,
weapon = "onehand",
ability = "Slam"
)
hstbl %>%
filter(ap == 0) %>%
ggplot(aes(y = damage, x = cost, fill = weapon)) +
geom_violin(alpha = 0.5) +
scale_fill_manual(values = cbp2,
name = "Weapon Type",
labels = c("Dagger", "One Handed", "Two Handed")) +
scale_x_continuous(breaks = seq(15, 40, by = 5),
limits = c(15, 40)) +
labs(y = "Damage",
x = "Effective DPR",
title = "HS effective DPR increases with average weapon damage",
subtitle = "10000 swings with sd = 4")
clvtbl %>%
filter(ap == 0) %>%
ggplot(aes(y = damage, x = cost, fill = weapon)) +
geom_violin(alpha = 0.5) +
scale_fill_manual(values = cbp2,
name = "Weapon Type",
labels = c("Dagger", "One Handed", "Two Handed")) +
scale_x_continuous(breaks = seq(15, 40, by = 5),
limits = c(15, 40)) +
labs(y = "Damage",
x = "Effective DPR",
title = " Cleave effective DPR increases with average weapon damage",
subtitle = "10000 swings with sd = 4, assuming Cleave hits two targets.")
tier1_2h <- sapply(ap_vals, slam, wpn_spd = 3.4, wpn_swing_dmg = 261)
tier2_2h <- sapply(ap_vals, slam, wpn_spd = 3.4, wpn_swing_dmg = 227)
tier1_2h_comparison <- as_tibble(cbind(ap_vals, tier1_2h)) %>%
pivot_longer(-ap_vals, names_to = "source") %>%
rename(damage = value) %>%
mutate(dpr = damage/15)
tier2_2h_comparison <- as_tibble(cbind(ap_vals, tier2_2h)) %>%
pivot_longer(-ap_vals, names_to = "source") %>%
rename(damage = value) %>%
mutate(dpr = damage/15)
slam_comparison <- bind_rows(tier1_2h_comparison, tier2_2h_comparison) %>%
mutate(dpr = damage/15)
slam_comparison <- bind_rows(slam_comparison, btdmg)
btdmg
bt_dmg
slam_comparison
slam_comparison <- bind_rows(slam_comparison, bt_dmg)
ggplot(slam_comparison, aes(x = ap_vals, y = dpr, color = source )) +
geom_point() +
geom_line() +
scale_colour_manual(values = cbp2,
name = "Weapon",
labels = c("Bloodthirst", "Tier 1", "Tier 2")) +
# scale_y_continuous(breaks = seq(100, 700, by = 100)) +
labs(y = "DPR",
x = "AP",
title = "Slam's DPR is much higher than Bloodthirst's.")
slam_comparison
knitr::opts_chunk$set(echo = FALSE)
library(janitor)
library(tidyverse)
library(ggplot2)
library(ggridges)
library(gghighlight)
theme_set(theme_light())
# The palette with grey:
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ad_dmg <- function(ap, wpn_spd){
added_dmg = ap * (wpn_spd/14)
return(added_dmg)
}
bt <- function(ap, crit = 0.3, dodge = 0.06){
multiplier = 1+crit-dodge
damage = multiplier * (ap * 0.45)
return(damage)
}
# execute <- function(rage, crit = 0.3, dodge = 0.06){
#         damage = multiplier * (600 + ((rage-10)*15))
#         return(damage)
# }
ap_vals <- seq(0, 2500, by = 250)
execute <- function(rage, points = 2, crit = 0.3, dodge = 0.06){
multiplier = 1+crit-dodge
if(points == 0){
added = rage-15
} else if (points == 1){
added = rage-13
} else if (points == 2){
added = rage-10
}
damage = (600 + (added*15)) * multiplier
return(damage)
}
ww <- function(wpn_swing_dmg, wpn_spd, ap, crit = 0.3, dodge = 0.06){
multiplier = 1+crit-dodge
additional = ad_dmg(ap, wpn_spd)
total = wpn_swing_dmg + (additional)
damage = multiplier * total
return(damage)
}
slam <- function(wpn_swing_dmg, wpn_spd = 3.3, ap, crit = 0.3, dodge = 0.06){
additional = (ad_dmg(ap, wpn_spd)) + 87
total = wpn_swing_dmg + (additional)
multiplier = 1+crit-dodge
damage = multiplier * total
return(damage)
}
conversion_values_tbl <- tibble::tribble(
~`Player Level`,    ~`Conversion Value`,
10,  37.4,
20,  72.4,
30, 109.3,
40, 147.9,
50, 188.3,
60, 230.6
)
hit_factor_tbl <- tibble::tribble(
~`Weapon`,      ~`Hit Type`,   ~`Hit factor`,
"Main Hand",   "Normal Hit",  3.5,
"Main Hand", "Critical Hit",    7,
"Off Hand",   "Normal Hit", 1.75,
"Off Hand", "Critical Hit",  3.5
)
ap_thresh <- as.data.frame(seq(0, 3000, 100))
bt_dmg <- as.data.frame(lapply(ap_thresh, bt))
bt_dmg <- bind_cols(ap_thresh, bt_dmg)
bt_dmg <- bt_dmg %>%
unnest() %>%
transmute(AP = `seq(0, 3000, 100)`,
Damage = `seq.0..3000..100.`) %>%
mutate(dpr = Damage/30)
# bt_dmg_exec <- as_tibble(cbind(ap_vals, btdmg)) %>%
#         rename(damage = btdmg) %>%
#         mutate(source = "bloodthirst") %>%
#         mutate(dpr = damage/30)
btdmg_slam <- as_tibble(cbind(ap_vals, btdmg)) %>%
rename(damage = btdmg) %>%
mutate(source = "bloodthirst") %>%
mutate(dpr = damage/30)
knitr::opts_chunk$set(echo = FALSE)
library(janitor)
library(tidyverse)
library(ggplot2)
library(ggridges)
library(gghighlight)
theme_set(theme_light())
# The palette with grey:
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ad_dmg <- function(ap, wpn_spd){
added_dmg = ap * (wpn_spd/14)
return(added_dmg)
}
bt <- function(ap, crit = 0.3, dodge = 0.06){
multiplier = 1+crit-dodge
damage = multiplier * (ap * 0.45)
return(damage)
}
# execute <- function(rage, crit = 0.3, dodge = 0.06){
#         damage = multiplier * (600 + ((rage-10)*15))
#         return(damage)
# }
ap_vals <- seq(0, 2500, by = 250)
execute <- function(rage, points = 2, crit = 0.3, dodge = 0.06){
multiplier = 1+crit-dodge
if(points == 0){
added = rage-15
} else if (points == 1){
added = rage-13
} else if (points == 2){
added = rage-10
}
damage = (600 + (added*15)) * multiplier
return(damage)
}
ww <- function(wpn_swing_dmg, wpn_spd, ap, crit = 0.3, dodge = 0.06){
multiplier = 1+crit-dodge
additional = ad_dmg(ap, wpn_spd)
total = wpn_swing_dmg + (additional)
damage = multiplier * total
return(damage)
}
slam <- function(wpn_swing_dmg, wpn_spd = 3.3, ap, crit = 0.3, dodge = 0.06){
additional = (ad_dmg(ap, wpn_spd)) + 87
total = wpn_swing_dmg + (additional)
multiplier = 1+crit-dodge
damage = multiplier * total
return(damage)
}
conversion_values_tbl <- tibble::tribble(
~`Player Level`,    ~`Conversion Value`,
10,  37.4,
20,  72.4,
30, 109.3,
40, 147.9,
50, 188.3,
60, 230.6
)
hit_factor_tbl <- tibble::tribble(
~`Weapon`,      ~`Hit Type`,   ~`Hit factor`,
"Main Hand",   "Normal Hit",  3.5,
"Main Hand", "Critical Hit",    7,
"Off Hand",   "Normal Hit", 1.75,
"Off Hand", "Critical Hit",  3.5
)
ap_thresh <- as.data.frame(seq(0, 3000, 100))
bt_dmg <- as.data.frame(lapply(ap_thresh, bt))
bt_dmg <- bind_cols(ap_thresh, bt_dmg)
bt_dmg <- bt_dmg %>%
unnest() %>%
transmute(AP = `seq(0, 3000, 100)`,
Damage = `seq.0..3000..100.`) %>%
mutate(dpr = Damage/30)
# bt_dmg_exec <- as_tibble(cbind(ap_vals, btdmg)) %>%
#         rename(damage = btdmg) %>%
#         mutate(source = "bloodthirst") %>%
#         mutate(dpr = damage/30)
btdmg_slam <- as_tibble(cbind(ap_vals, btdmg)) %>%
rename(damage = btdmg) %>%
mutate(source = "bloodthirst") %>%
mutate(dpr = damage/30)
btdmg
# bt_dmg_exec <- as_tibble(cbind(ap_vals, btdmg)) %>%
#         rename(damage = btdmg) %>%
#         mutate(source = "bloodthirst") %>%
#         mutate(dpr = damage/30)
btdmg <- sapply(ap_vals, bt)
btdmg_slam <- as_tibble(cbind(ap_vals, btdmg)) %>%
rename(damage = btdmg) %>%
mutate(source = "bloodthirst") %>%
mutate(dpr = damage/30)
library(bookdown)
1116/0.45
execute
900*1.24
execute <- function(rage, points = 2, crit = 0.3, dodge = 0.06, multiplier = TRUE){
multiplier = 1+crit-dodge
if(points == 0){
added = rage-15
} else if (points == 1){
added = rage-13
} else if (points == 2){
added = rage-10
}
if(multiplier == TRUE){
damage = (600 + (added*15)) * multiplier
} else {
damage = (600 + (added*15))
}
return(damage)
}
execute(30)
execute(30, multiplier = TRUE)
execute(30, multiplier = FALSE)
execute <- function(rage, points = 2, crit = 0.3, dodge = 0.06, multiplier = TRUE){
multiplier = 1+crit-dodge
if(points == 0){
added = rage-15
} else if (points == 1){
added = rage-13
} else if (points == 2){
added = rage-10
}
if(multiplier == TRUE){
damage = (600 + (added*15)) * multiplier
} else if (multiplier == FALSE){
damage = (600 + (added*15))
}
return(damage)
}
execute(30)
execute <- function(rage, points = 2, crit = 0.3, dodge = 0.06, multiplier = TRUE){
if(points == 0){
added = rage-15
} else if (points == 1){
added = rage-13
} else if (points == 2){
added = rage-10
}
if(multiplier == TRUE){
multiplier = 1+crit-dodge
damage = (600 + (added*15)) * multiplier
} else if (multiplier == FALSE){
damage = (600 + (added*15))
}
return(damage)
}
execute(30)
execute(30, multiplier = FALSE)
execute(30, multiplier = FALSE)
preview_chapter("03-abilities_rotation.Rmd")
bookdown:::mathquill()
20*15
preview_chapter("03-abilities_rotation.Rmd")
publish_book()
slam_exec_comparison
publish_book()
publish_book()
d <- c("Twas", "brillig and", "the", "slithy toves")
e <- grep("[Tt]+", d, perl = TRUE, value = T)
e
height <- c(25, 18, 40, 45, 35)
height(5)
height[length(height)]
a <- c(3, 3, 6.5, 8)
b <- c(7, 2, 5.5, 10)
c <- a < b
c
unclass(as.Date("1971-01-01"))
d.pizza <- data.frame
d.pizza
class( d.pizza[, "temperature"])
xvect <- c(1,2,3)
xvect[2] <- "2"
xvect
pnorm(1.96)
norm(1.96)
rnorm(1.96)
dnorm(1.96)
?pnorm
